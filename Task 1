import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt


from sklearn.model_selection import  train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn .linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
df = pd.read_excel("Credit Scoring sp .xlsx")
df.head()
df.info()
df.isnull().sum()
df_encoded = pd.get_dummies(df, drop_first=True) 
X = df_encoded.drop('Credit Worthy', axis =1)
y = df_encoded['Credit Worthy']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42
)

model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)


accuracy = accuracy_score(y_test, y_pred)
print("Accuracy :", accuracy)

print("\nClassification Report:")
print(classification_report(y_test, y_pred))


print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

from sklearn.ensemble import RandomForestClassifier


rf_model = RandomForestClassifier(random_state=42)
rf_model.fit(X_train, y_train)

rf_pred = rf_model.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

print("Random Forest accuracy:", accuracy_score(y_test, rf_pred))
print("\nClassification report:",classification_report(y_test, rf_pred))
print("\nConfusion Matrix:", confusion_matrix(y_test, rf_pred))
